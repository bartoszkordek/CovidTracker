plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'com.bmuschko.docker-spring-boot-application' version '6.6.1'
}

test {
    useJUnitPlatform()
}

repositories {
    jcenter()
    mavenCentral()
}

docker {
    springBootApplication {
        baseImage = 'openjdk:11-jdk-slim'
        ports = [0]
        images = ["user-account-service:${version}"]
    }
}

dependencies {
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.2.5.RELEASE')
    implementation('org.springframework.boot:spring-boot-starter-web:2.3.5.RELEASE')
    implementation('org.springframework.boot:spring-boot-starter-security:2.3.5.RELEASE')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa:2.3.5.RELEASE')
    implementation('io.jsonwebtoken:jjwt:0.9.1')
    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.3')
    implementation('org.modelmapper:modelmapper:2.3.8')
    implementation('com.google.code.gson:gson:2.8.2')
    implementation('com.h2database:h2:1.4.200')

    testImplementation('org.springframework.boot:spring-boot-starter-test:2.2.6.RELEASE')
}


//        <dependency>
//        <groupId>org.springframework.boot</groupId>
//			<artifactId>spring-boot-starter-web</artifactId>
//        </dependency>
//		<dependency>
//			<groupId>org.springframework.cloud</groupId>
//<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
//		</dependency>
//        <dependency>
//        <groupId>org.springframework.boot</groupId>
//			<artifactId>spring-boot-devtools</artifactId>
//<scope>runtime</scope>
//			<optional>true</optional>
//        </dependency>
//
//		<dependency>
//			<groupId>org.springframework.boot</groupId>
//<artifactId>spring-boot-starter-test</artifactId>
//			<scope>test</scope>
//        <exclusions>
//        <exclusion>
//        <groupId>org.junit.vintage</groupId>
//					<artifactId>junit-vintage-engine</artifactId>
//</exclusion>
//			</exclusions>
//        </dependency>
//		<dependency>
//			<groupId>com.fasterxml.jackson.dataformat</groupId>
//<artifactId>jackson-dataformat-xml</artifactId>
//		</dependency>
//        <dependency>
//        <groupId>io.jsonwebtoken</groupId>
//			<artifactId>jjwt</artifactId>
//<version>0.9.1</version>
//		</dependency>
//        <dependency>
//        <groupId>org.modelmapper</groupId>
//			<artifactId>modelmapper</artifactId>
//<version>2.3.8</version>
//		</dependency>
//        <dependency>
//        <groupId>com.h2database</groupId>
//			<artifactId>h2</artifactId>
//<scope>runtime</scope>
//		</dependency>
//        <dependency>
//        <groupId>org.springframework.boot</groupId>
//			<artifactId>spring-boot-starter-data-jpa</artifactId>
//</dependency>
//		<dependency>
//			<groupId>org.springframework.boot</groupId>
//        <artifactId>spring-boot-starter-security</artifactId>
//		</dependency>
//</dependencies>
